{"version":3,"sources":["serviceWorker.js","reducers/pokemonReducer.js","reducers/index.js","store/index.js","actions/PokemonActions.js","components/PokemonList/Pokemon/index.js","components/PokemonList/index.js","containers/PokemonListContainer.js","components/PokemonDetail/index.js","services/pokemonService.js","containers/PokemonDetailContainer.js","services/getTypeInfo.js","components/PokemonDetail/DamageTypes/index.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","pokemonList","reducers","combineReducers","pokemonListReducer","state","arguments","length","undefined","action","type","FETCH_POKEMON","Object","objectSpread","payload","FETCH_ONE","selectedPokemon","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","getPokemon","axios","get","then","resultSet","pokemon","dispatch","data","results","catch","error","console","log","getPokemonByName","name","concat","fetchOnePokemon","getPokemonId","url","html","ID","substring","split","map","caracter","indexOf","join","react_default","a","createElement","style","marginLeft","className","Pokemon","props","onClick","onPokemonClick","backgroundImage","backgroundPosition","textAlign","PokemonList","pokemonComponents","components_PokemonList_Pokemon","handlePokemonClick","key","getOnePokemon","PokemonListContainer","handleSelectedPokemon","_this","this","getPokemonList","datos","width","src_components_PokemonList","height","Component","connect","PokemonDetail","lib","xs","center","src","sprites","front_default","around","types","color","getColor","backgroundColor","src_components_PokemonDetail","getTypeInfo","infoType","DamageTypes","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","dataType","promise","_this2","typeInfo","setState","typePromise","params","assignTypeInfoToState","nextProps","Routes","Switch","Route","path","component","App","md","containers_PokemonListContainer","PokemonDetailContainer","routes","ReactDOM","render","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1263556.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FETCH_POKEMON, FETCH_ONE } from '../actions/PokemonActions';\r\n\r\nconst initialState = {\r\n\tpokemonList: []\r\n};\r\n\r\nexport const pokemonListReducer = (state = initialState, action) =>{\r\n\tswitch (action.type) {\r\n\r\n\t\tcase FETCH_POKEMON:\r\n\t\t\treturn {...state, pokemonList: action.payload}\r\n\r\n\t\tcase FETCH_ONE:\r\n\t\t\treturn {...state, selectedPokemon: action.payload}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\r\n} ","\r\nimport { combineReducers } from 'redux';\r\nimport { pokemonListReducer as pokemonReducer } from './pokemonReducer';\r\n\r\nconst reducers = combineReducers({\r\n\tpokemonListReducer: pokemonReducer,\r\n})\r\n\r\nexport default reducers;","\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n//import { pokemonListReducer } from '../reducers/pokemonReducer.js';\r\nimport reducers from '../reducers';\r\n\r\n//Initial state para que la aplicación comience con datos\r\nconst initialState = {\r\n\r\n};\r\n\r\n\r\n//export const store = createStore(pokemonListReducer, initialState, compose(applyMiddleware(thunk),  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\nexport const store = createStore(reducers, initialState, compose(applyMiddleware(thunk),  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n//const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//export const store = createStore(pokemonListReducer, initialState , composeEnhancers(applyMiddleware(thunk)));\r\n","import axios from 'axios';\r\nimport { store }  from './../store';\r\n\r\n\r\nexport const FETCH_POKEMON = 'FETCH_POKEMON';\r\nexport const FETCH_ONE = 'FETCH_ONE';\r\n\r\n\r\nexport const fetchPokemon = pokemon => ({\r\n\ttype: FETCH_POKEMON,\r\n\tpayload: { pokemon }\r\n});\r\n\r\nexport const fetchOnePokemon = pokemon => ({\r\n\ttype: FETCH_ONE,\r\n\tpayload : pokemon\r\n});\r\n\r\n\r\nexport const getPokemon = () => {\r\n\t\treturn axios.get('https://pokeapi.co/api/v2/pokemon').then(resultSet => {\r\n\t\t\t//console.log(resultSet)\r\n\t\t\tstore.dispatch(fetchPokemon(resultSet.data.results))\r\n\t\t}).catch(\r\n\t\t\terror => {console.log(error)}\r\n\t\t);\r\n\r\n}\r\n\r\nexport const getPokemonByName = name => {\r\n\treturn dispatch => {\r\n\t\treturn axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`).then(pokemon => {\r\n\t\t\tstore.dispatch(fetchOnePokemon(pokemon))\r\n\t\t}).catch(error =>{\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\t}\r\n\t\t\r\n}\r\n\r\n","import React from 'react'\r\nimport './index.css';\r\n\r\n\r\nconst getPokemonId = (url,html) => {\r\n\tvar numeros = \"0123456789\";\r\n\tvar idPokemon = url.substring(url.length -4, url.length -1).split(\"\");\r\n\r\n\tconst ID = idPokemon.map(caracter => {\r\n\t\tif(numeros.indexOf(caracter) !== -1){\r\n\t\t\treturn caracter;\r\n\t\t}}).join(\"\");\r\n\r\n\tif(html)\r\n\treturn <h3 style={{marginLeft: \"10px\"}}className=\"activeNeon\">{`#${ID}`}</h3>;\r\n\telse\r\n\treturn ID;\r\n}\r\n\r\n\r\nconst Pokemon = (props) => (\r\n\t<div onClick={()=> props.onPokemonClick()} className=\"pokemon\">\r\n\t\t<div className=\"spriteContainer \" \r\n\t\t\tstyle={{backgroundImage: \"url(\" + `./../../../assets/images/pokemon/${getPokemonId(props.pokemon.url,false)}.png` + \")\",\r\n\t\t\tbackgroundPosition: 'center'}}>\r\n        </div>\r\n            {getPokemonId(props.pokemon.url,true)}\r\n\t\t<h3 className=\"continue pointer neon\" style={{textAlign: \"center\", marginLeft: \"15px\"}}> {props.pokemon.name}</h3>\r\n\r\n\t</div>\r\n)\r\n\r\nexport default Pokemon;","import React from 'react';\r\nimport Pokemon from './Pokemon';\r\nimport './index.css';\r\n \r\n\r\nconst PokemonList = (props) => {\r\n\t\t\r\n\t\tconst pokemonComponents = props.pokemonList && props.pokemonList.map(pokemon => (\r\n\t\t\t<Pokemon onPokemonClick={()=> handlePokemonClick(pokemon.name)} pokemon={pokemon} key={pokemon.name}/>\r\n\t\t))\r\n\r\n\t\tconst handlePokemonClick = name => {\r\n\t\t\tprops.getOnePokemon(name);\r\n\t\t}\r\n\r\n        return (\r\n        \t<div className=\"list\">\r\n\t        \t<div>\r\n\t       \t\t  <h2 className=\"pokeTitle\">Poke<span>Dex</span></h2>\r\n\t        \t</div>\r\n\t            { props.pokemonList !== undefined ? pokemonComponents : <h2>Esta vacio</h2> }\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default PokemonList;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPokemon } from './../actions/PokemonActions';\r\nimport PokemonList from './../components/PokemonList';\r\nimport { getPokemonByName } from './../actions/PokemonActions';\r\n\r\n\r\nclass PokemonListContainer extends Component {\r\n\r\n\tcomponentDidMount(){\r\n\t  this.props.getPokemonList();\r\n\t}\r\n\r\n\timprimir(datos){\r\n\t\tconsole.log(datos);\r\n\t\t//console.log(this.props.pokemonList.data.results)\r\n\t\t//<h1 onClick={()=> {this.imprimir(pokemonList)}}>Lista de pokemon</h1>\r\n\r\n\t}\r\n\r\n\thandleSelectedPokemon = name => {\r\n       this.props.getOnePokemon(name);\r\n    }\r\n\r\n    render() {\r\n    \tconst pokemonList = this.props.pokemonList;\r\n        return (\r\n        \t<div style={{width: \"30%\"}}>\r\n\t           <div className=\"pokemonList\">\r\n\t           <PokemonList getOnePokemon={this.handleSelectedPokemon}style={{height: \"50%\"}} pokemonList={pokemonList}/>\r\n\t           </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tpokemonList: state.pokemonListReducer.pokemonList.pokemon,\r\n\tselectedPokemon: state.pokemonListReducer.selectedPokemon\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tgetPokemonList: () => dispatch(getPokemon),\r\n\tgetOnePokemon: name => dispatch(getPokemonByName(name))\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PokemonListContainer);\r\n\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport {Row,Col} from 'react-flexbox-grid';\r\nimport { getColor} from '../../services/pokemonService';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst mapTypesToDiv = types =>{\r\n\t\r\n\treturn  types.map(type=>{\r\n\t\tconst color = getColor(type.type.name);\r\n\t return <Col xs={5} key={type.type.name} className=\"pokeType\" style={{backgroundColor: color}}>\r\n\t {type.type.name}\r\n\t </Col>\r\n\t \r\n})}\r\n\r\n\r\n\r\nconst PokemonDetail = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"detailContainer detailContainerBackground\">\r\n\t\t<h1 onClick={()=> console.log(props.pokemon)}>{props.pokemon ? props.pokemon.data.name + \" detail\" : \"Choose a Pokemon\"} </h1>\r\n\t\t<Row>\r\n\t\t\t<Col xs={11.5}>\r\n\t\t\t\t<Row center=\"xs\">\r\n      \t\t\t\t<div className=\"imageBox\">\r\n      \t\t\t\t\t<img height=\"300px\" width=\"300px\" src={props.pokemon ? props.pokemon.data.sprites.front_default : \"http://pngimg.com/uploads/pokeball/pokeball_PNG12.png\"}></img>\r\n      \t\t\t\t</div>\r\n    \t\t\t</Row>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\r\n\t\t<Row around=\"xs\">\r\n\t\t{props.pokemon ? mapTypesToDiv(props.pokemon.data.types) : \"Cargando\"}\t\t\r\n\t\t</Row>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nconst table = pokemon => {\r\n\t//{props.pokemon ? table(props.pokemon.data) : \"Cargando\"}\r\n\r\n\treturn (\r\n\t\t<Row start=\"xs\">\r\n\t\t<Col xs={6}>\r\n\t\t\t<table className=\"paleBlueRows\" style={{marginLeft: \"50px\",marginTop: \"50px\"}}>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Peso</th>\r\n\t\t\t\t\t\t<th>Altura</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td> {pokemon.weight}</td>\r\n\t\t\t\t\t\t<td>{pokemon.height }</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\t\r\n\t\t\t</table>\r\n\t\t</Col>\t\t\r\n\t\t</Row>\r\n\t);\r\n}\r\nexport default PokemonDetail;\r\n","\r\nexport const getColor = type => {\r\n\tswitch (type) {\r\n\t\tcase \"poison\":\r\n\t\t\treturn \"purple\";\r\n\t\tcase \"fire\":\r\n\t\t\treturn \"red\";\r\n\t\tcase \"grass\":\r\n\t\t\treturn \"green\";\r\n\t\tdefault:\r\n\t\t\treturn \"blue\";\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { getPokemonById } from './../actions/PokemonActions';\r\nimport PokemonDetail from './../components/PokemonDetail';\r\n//import Routes from './../routes.js';\r\n//import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nclass PokemonListContainer extends Component {\r\n\r\n\timprimir(datos){\r\n\t\tconsole.log(datos);\r\n\t}\r\n    \r\n    render() {\r\n        return (\r\n        \t<div className=\"continue\">\r\n                 <PokemonDetail pokemon={this.props.pokemon}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\npokemon: state.pokemonListReducer.selectedPokemon\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PokemonListContainer);\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst getTypeInfo = type => {\r\n\treturn axios.get(`https://pokeapi.co/api/v2/type/${type}`).then(infoType => {\r\n\t\t\r\n\t\treturn infoType;\r\n\t}).catch(error=>{\r\n\t\tconsole.log(error);\r\n\t})\r\n}\r\n\r\nexport default getTypeInfo;\r\n\r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport getTypeInfo from './../../../services/getTypeInfo';\r\n\r\n\r\nclass DamageTypes extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = ({\r\n\t\t\tdataType: null\r\n\t\t})\r\n\t}\r\n\r\n\tassignTypeInfoToState(promise){\r\n\t\tpromise.then(typeInfo => {\r\n   \t\tthis.setState( {...this.state, dataType: typeInfo})\r\n   \t\t});\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tvar typePromise = getTypeInfo(this.props.match.params.type);\r\n   \t\tthis.assignTypeInfoToState(typePromise); \r\n   \t}\r\n\r\n   componentWillReceiveProps(nextProps){\r\n   \t\tvar typePromise = getTypeInfo(nextProps.match.params.type);\r\n   \t\tthis.assignTypeInfoToState(typePromise);\r\n   }\r\n\r\n    render() {    \t\r\n        return (\r\n        \t<div>\r\n\t            <h1>{this.state.dataType ? this.state.dataType.data.name : \"Cargando\"}</h1>\r\n\t\t        \t<table>\r\n\r\n\t\t        \t<thead>\r\n\t\t        \t\t<tr>\r\n\t\t        \t\t\t<th>Damage from x 2</th>\r\n\t\t        \t\t\t<th>Damage To x 2</th>\r\n\t\t        \t\t\t<th>Damage From x 0.5</th>\r\n\t\t        \t\t\t<th>Damage To x 0.5</th>\r\n\t\t        \t\t</tr>\r\n\r\n\t\t        \t</thead>\r\n\r\n\t\t        \t<tbody>\r\n\t\t        \t\t\t        \t    \t\r\n\t\t        \t</tbody>\r\n\r\n\t        \t</table>\r\n        \t</div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default DamageTypes;","\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport DamageTypes from './components/PokemonDetail/DamageTypes';\r\nimport PokemonDetail from './components/PokemonDetail';\r\n\r\n\r\nconst Routes = () => {\r\n\treturn(\r\n\t\t<Switch>\r\n\t\t\t<Route path=\"/types/:type\" component={DamageTypes}/>\r\n\t\t</Switch>\r\n\t)\r\n}\r\n\r\nconst Tipos = () => (<h1>Probando las rutas</h1>);\r\n\r\nexport default Routes;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport {Grid,Row,Col} from 'react-flexbox-grid';\nimport PokemonListContainer  from './containers/PokemonListContainer'; \nimport PokemonDetailContainer from './containers/PokemonDetailContainer';\n//<header className=\"App-header\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></header>\nimport Routes from './routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Grid>\n        \t<Row>\n        \t\t<Col xs={6} md={4}>\n        \t\t\t<PokemonListContainer className=\"continue\"/>\n        \t\t</Col>\n        \t\t<Col xs={12} md={8}>\n        \t\t\t<PokemonDetailContainer className=\"continue\"/>\n        \t\t</Col>\n  \t\t    </Row>\n      </Grid>\n        \n      <Routes/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\n\n\n//import AppRoutes from './routes';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t<BrowserRouter>\n\t<App />\n\t</BrowserRouter>\n\t</Provider>\n\t, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}